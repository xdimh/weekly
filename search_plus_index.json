{"./":{"url":"./","title":"前言","keywords":"","body":"关于本书 前端是一个技术更新发展比较快的行业,需要你不停的去学习,更新完善自己的技术栈,俗话说,好记性不如烂笔头,打算把自己做项目过程中的一些心得,遇到过并填过的坑,同时将自己学习的新知识,平常摸过的鱼记录在此,以便以后如果遇到类似的问题,类似的坑,需要用到之前看过的技术的时候有个地方可以参考。 不管做什么贵在坚持,希望自己能够坚持做好记录这件事。 var className='atoc'; © xdimh all right reserved，powered by Gitbook该文件修订时间： 2017-02-11 20:16:12 "},"react/":{"url":"react/","title":"React 开发汇总","keywords":"","body":"var className='atoc'; © xdimh all right reserved，powered by Gitbook该文件修订时间： 2017-02-11 21:54:33 "},"react-native/":{"url":"react-native/","title":"React Native 开发汇总 ","keywords":"","body":"var className='atoc'; © xdimh all right reserved，powered by Gitbook该文件修订时间： 2017-02-08 14:48:57 "},"react-native/rn-dev-prepare.html":{"url":"react-native/rn-dev-prepare.html","title":"Mac上搭建RN开发环境","keywords":"","body":"Mac上搭建RN开发环境 安装依赖 在针对特定平台开发环境建立之前,你需要先安装node,watchman,react-native-cli。在Mac上我们可以通过HomeBrew进行相应的安装。 brew install node brew install watchman brew install flow npm install -g react-native-cli ios 开发环境搭建 对于ios 只需要从app store中安装xcode即可,安装xcode会自动安装ios 模拟器以及一些构建app所需要的工具。通过react-native 命令初始化一个项目然后测试ios开发环境是否成功建立。 react-native init AwesomeProject cd AwesomeProject 在ios模拟器中启动应用,两种方式: 通过命令行直接唤起模拟器打开app react-native run-ios 执行完该命令,正常情况下,会打开ios模拟器,然后启动应用以供调试。 进入目录AwesomeProject,打开ios目录下的文件AwesomeProject.xcodeproj,如果xcode成功安装,默认会打开xcode。然后直接 android 开发环境搭建 对于android开发环境要稍微复杂一些。 安装安卓模拟器genymotion 安装完成后需要去官网注册一个账户并激活,后续创建虚拟设备将会用到。 安装virtual box 安装最新版JDK 安装安卓Android Studio 打开sdk manager 安装的Android sdk Image 1.3.1.1 - android studio 选择需要安装的内容 Image 1.3.1.2 - android sdk 打开genymotion 创建安卓模拟器 先设置好正确的android sdk路径 添加相应的虚拟设备 打开对应的虚拟设备测试安卓开发环境是否成功建立 打开对于的虚拟设备后,在项目根目录执行命令启动应用: react-native run-android 这一步可能发送报错java.io.EOFException: SSL peer shut down incorrectly,解决方案在后面。 这个时候如果build successfully 则在模拟器上可以看到对于app的页面,如果模拟器上出现如下报错: 需要设置对应的debug host为当前电脑的ip地址,如下图: 环境配置过程报错解决 对于安卓开发环境步骤6中运行react-native run-android所报错误解决方法 下载gradle-2.4-all.zip到本地 本地启动对于的服务 修改android/gradle/wrapper下gradle-wrapper.properties文件中的distributionUrl为本地地址,重新执行react-native run-android 参考资料 React Native Android（Genymotion） 环境搭建 for mac 学习 React Native for Android：环境搭建 Getting Started with Building An App with React Native, Genymotion, and Watchman react native getting started react-native run-android 报错解决 React Native For Android初体验 var className='atoc'; © xdimh all right reserved，powered by Gitbook该文件修订时间： 2017-02-14 13:59:35 "},"electron/":{"url":"electron/","title":"Electron 开发汇总","keywords":"","body":"var className='atoc'; © xdimh all right reserved，powered by Gitbook该文件修订时间： 2017-02-08 14:48:57 "},"mix/":{"url":"mix/","title":"大杂烩","keywords":"","body":"前端大杂烩 所谓大杂烩就是各种东西丢在一锅里乱炖,这里主要记录前端里面一些杂七杂八的东西,没地方放了就都丢在这一锅里吧。 var className='atoc'; © xdimh all right reserved，powered by Gitbook该文件修订时间： 2017-02-11 21:59:31 "},"mix/regular-expression.html":{"url":"mix/regular-expression.html","title":"JavaScript中的正则表达式之正向环视(正向断言)","keywords":"","body":"JavaScript中的正则表达式之正向环视(正向断言) 正则表达式在前端页面中很多地方有被应用到,特别是表单的验证逻辑部分,像验证邮箱,手机号,网址等,以及格式化字符串。比如最近遇到一个需求如下: 输入: 15210790946 输出: 152 1079 0946 对11位的手机号从最后面一位数字开始每4位数字前就需要加一个空格 要写好一个正则表达式最重要的首先是要清楚的知道组成每一个正则表达式部分的含义,元字符是正则表达式的重要组成部分。 元字符 元字符 名称 匹配对象 . 点号 单个任意字符 * 星号 之前紧邻的字符出现0+次 + 加号 之前紧邻的字符出现1+次 ? 问号 之前紧邻的字符出现0或者1次 [...] 字符组 列出的任意一个字符 [^...] 排除型字符组 除列出的字符外任意一个字符 (...) 分组符 括号内的分为一组 {n,m} 匹配次数限制 之前紧邻的字符出现至少n次至多m次 ^ 脱字符 行的起始位置 $ 美元符 行的末尾位置 | 竖线 匹配任意分隔的表达式 \\ 单词分界符 单词左边界 \\> or \\b 单词分界符 单词右边界 \\1,\\2 反向引用 分别存放匹配第一组括号,第二组括号文本内容 (?:...) 非捕获型分组 这个括号中匹配的内容不会被反向引用 \\w 缩写 等价于[A-Za-z0-9_] \\W 缩写 等价于[^A-Za-z0-9_] \\d 缩写 等价于[0-9] \\D 缩写 等价于[^0-9] \\s 缩写 匹配一个空白字符，包括空格、制表符、换页符和换行符。1 \\S 缩写 排除\\s 2 (?=...) 正向环视 匹配前面(右边)是...的位置 (? 逆向环视 匹配后面是...的位置 完成需求 // 对手机号码参数进行调整,去除手机号码中非数字字符,然后对手机号码应用格式化正则规则 // (?=(?:\\d{4})+$) 这个部分匹配以整数倍4个数字结尾的位置 // (\\d) 这里用来匹配一个数字,即只有以整数倍4个数字结尾的位置前面还有一个数字的情况下才需要添加空格。 // 因JavaScript 不支持逆向环视(逆向断言) 所以不能用replace(/(? 1. 等价于[\\f\\n\\r\\t\\v\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]。 ↩ 2. 等价于[^ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]。 ↩ var className='atoc'; © xdimh all right reserved，powered by Gitbook该文件修订时间： 2017-02-11 23:23:59 "}}